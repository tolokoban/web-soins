{"version":3,"sources":["structure/parser.yaml","tfw/view/input-date.yaml","App.yaml","report/report.fods","presentational/stat.yaml","state/user.ts","state/organizations.ts","state/carecenters.ts","structure/index.ts","state/structures.ts","state/stats-config.ts","state/stats.ts","util/hash.ts","state/index.ts","service/organization.ts","service/carecenter.ts","structure/parser.ts","service/structure.ts","tfw/permissive-json/tokenizer.ts","tfw/permissive-json/index.ts","tfw/fileapi.ts","tfw/util.ts","tfw/view/input-file/index.tsx","tfw/view/touchable.tsx","tfw/view/expand/expand.tsx","tfw/debouncer.ts","tfw/view/input-date.tsx","presentational/form-field.tsx","report/report-view.tsx","intl.ts","report/report.tsx","presentational/carecenter-header.tsx","presentational/stats-config.tsx","container/stats-config.ts","dialog/stats-config.tsx","container/carecenter-header.tsx","presentational/wait/wait.tsx","presentational/pie.tsx","service/stat.ts","presentational/stat.tsx","tfw/layout/sidemenu.tsx","container/sidemenu.tsx","App.tsx","main.tsx"],"names":["module","exports","fr","err-1","err-2","err-3","en","invalid","month-0","month-1","month-2","month-3","month-4","month-5","month-6","month-7","month-8","month-9","month-10","month-11","cancel","close","code","consultations","consultations-count","create-stat","create-stat-consultation","create-stat-patient","date-min","date-max","generating-report","loading","loading-report","logout","patients","patients-count","report","stat-type","struct","welcome","__webpack_require__","p","export","no-data","ATTRIBUTES","Set","state_user","INITIAL_STATE","email","nickname","language","roles","reducer","state","action","type","startsWith","attName","substr","length","has","Error","concat","attValue","data","Object","assign","defineProperty","setLanguage","setNickname","state_organizations","organizations","slice","organization","newState","push","add","map","item","id","update","setOrganizations","addOrganization","updateOrganization","state_carecenters","carecenters","carecenter","setCarecenters","addCarecenter","updateCarecenter","src_structure","createPatientsFieldsFromStructure","structure","patientsFields","patientFields","forEach","patientField","createPatientsFieldsCaptionsFromStructure","patientsFieldsCaptions","Intl","toText","caption","getFieldCaption","key","charAt","formFields","state_structures","structures","setStructures","addStructure","updateStructure","stats_config","statsType","dateMin","today","Date","getDate","firstDayOfCurrentMonth","getFullYear","getMonth","getTime","lastMonth","dateMax","now","birthday","size","nationality","organizationId","structureId","patientsCount","consultationsCount","name","objectSpread","setType","date","setDateMin","setDateMax","fields","setPatientsFields","fieldName","castString","fieldVisibility","castBoolean","setPatientField","state_stats","stats","stat","addStat","hash","statsConfig","obj","user","User","Organizations","Carecenters","Structures","StatsConfig","Stats","store","createStore","arguments","undefined","console","log","carecenterId","find","c","s","Structure","initStatsConfig","h","Hash","filter","removeStat","src_state","dispatch","service_organization","list","_list","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","WebService","exec","abrupt","sent","stop","apply","this","service_carecenter","_x","_","make","require","RX_LINE","structure_parser","parse","types","levels","split","line","lineNumber","trim","level","computeLevel","pop","children","m","toUpperCase","tags","v","parseLine","ex","message","flattenFormsFields","forms","recursiveFlattenFormsFields","path","keys","child","sort","b","captionA","captionB","service_structure","parsePatient","patient","parseFormFields","exams","vaccins","sources","def","Parser","error","stringifiedPatientDef","raw","toIntl","result","fringe","shift","_arr","_i","value","OBJ_OPEN","OBJ_CLOSE","ARR_OPEN","ARR_CLOSE","STRING","NUMBER","SPECIAL","COLON","TYPE_NAMES","tokenizer","tokenize","source","Context","getTypeName","RX_DECIMAL","RX_HEXA","RX_OCTAL","RX_BINARY","_this","classCallCheck","eaters","index","end","tokens","eatBlanks","indexOf","peek","eatSymbol","tkn","addToken","eatComment","endOfSingleComment","endOfComment","fail","eatString","start","quote","escape","str","eos","eatIdentifier","test","parseFloat","parseInt","currentSourceIndex","eaterIndex","eater","msg","permissive_json","text","Tokenizer","parser","prototype","back","Math","max","parseObject","parseArray","arr","val","indexForMissingKey","fileapi","saveAs","blob","fileName","url","window","URL","createObjectURL","anchorElem","document","createElement","style","display","href","download","body","appendChild","click","removeChild","setTimeout","revokeObjectURL","util","padNumber","fillWith","clamp","min","loadTextFromFile","file","Promise","resolve","reject","reader","FileReader","onload","content","target","onerror","err","readAsText","loadTextFromURL","fetch","then","response","ok","status","statusText","catch","loadJsonFromURL","json","InputFile","props","possibleConstructorReturn","getPrototypeOf","call","refInput","React","createRef","handleClick","bind","assertThisInitialized","handleFileChange","evt","handler","onClick","files","input","current","classes","wide","react_default","className","join","view_button","label","icon","wait","flat","small","warning","enabled","ref","accept","multiple","onChange","Component","Touchable","touchable","TouchableBehavior","onTap","color","element","castArray","classNames","react","tabIndex","title","Expand","handleValueChange","onValueChange","touchable_Touchable","debouncer","delay","timer","_len","args","Array","_key","clearTimeout","Input","inputDay","inputMonth","inputYear","handleChange","Debouncer","day","isNaN","month","year","setState","castInteger","globalId","header","htmlFor","maxLength","defaultValue","monthId","FormField","setValue","values","Storage","local","set","info","renderField","field","renderTypedField","expand_Expand","get","_this2","isArray","view_checkbox","input_date_Input","JSON","stringify","combo","t","ReportView","handleFilesChange","onFilesChange","State","getState","_this$state","input_file_InputFile","form_field_FormField","src_report_report","generate","_callee2","extraData","_context2","Dialog","alert","generateFromTemplate","generateFromUserProvidedFile","_callee3","_context3","Util","LibreOfficeCalcTemplate","doGenerate","_ref","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","Symbol","iterator","done","t0","return","finish","dialog","hide","_x3","show","report_view_ReportView","footer","_callee4","domParser","doc","placeholders","query","serializer","xml","_context4","DOMParser","parseFromString","findPlaceholders","documentElement","elem","textContent","PermissiveJSON","_ref2","WS","Number","parent","parentElement","setAttribute","XMLSerializer","serializeToString","FileAPI","Blob","nodeType","Node","ELEMENT_NODE","nodeName","endsWith","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","childNodes","CarecenterHeader","handleStatClick","onStatClick","handleStructClick","onStructClick","handleReportClick","Report","handleTypeChange","handleDateMinChange","handleDateMaxChange","onTypeChange","onDateMinChange","onDateMaxChange","flex","connect","Actions","dialog_stats_config","closeOnEscape","es","container_stats_config","StatsConfigDialog","Wait","animate","DEFAULT_COLORS","Pie","canvas","paint","colors","width","radius","floor","turn","PI","angleStep","total","reduce","acc","ctx","getContext","angle","angleTarget","lineTo","ang","sin","cos","save","clearRect","translate","fillStyle","globalAlpha","ellipse","fill","strokeStyle","lineWidth","i","beginPath","moveTo","closePath","stroke","restore","height","service_stat","extract","_extract","extraction","begin","convertTime","consultation","convertIntoOccurences","milliseconds","occurences","sum","occ","fieldValues","sortDescBySecondElement","A","Stat","selectedField","handleClose","onClose","dataFromService","refresh","StatService","_getFieldsKeysAndValu","getFieldsKeysAndValues","output","fieldKey","idx","fieldCaption","slicedToArray","count","_getFieldsKeysAndValu2","pie_Pie","getValuesForPie","_ref3","_ref4","colorIndex","justifyContent","alignItems","dir","background","formatDate","array","B","d","sectors","Sidemenu","refMenu","handleShowChange","menu","Gesture","on","swipeleft","onShowChange","innerWidth","head","stat_Stat","carecentersOfOrganization","wait_Wait","container_carecenter_header","renderCareCenterHeader","location","reload","onLanguageClick","onLogoutClick","App","src_container_sidemenu","__webpack_exports__","_start","root","getElementById","ReactDOM","render","App_App","lang","ServiceOrganization","ServiceStructure","ServiceCarecenter","_x2"],"mappings":"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","file":"static/js/2.4d72bb06.chunk.js","sourcesContent":["module.exports = {\"fr\":{\"err-1\":\"Une ligne non vide et non commentée doit toujours commencer par au moins une astérisque pour indiquer le niveau hiérarchique.\",\"err-2\":\"<html>Vous avez sauté au moins un niveau hiérarchique:<br/><code>$1</code> !<br/><br/>Vous étiez au niveau <b>$2</b> et vous définissez maintenant le niveau <b>$3</b>.\",\"err-3\":\"<html>Vous avez déjà déclaré cet identifiant : <b>$1</b> !\"}}","module.exports = {\"en\":{\"invalid\":\"Invalid date!\",\"month-0\":\"Jan\",\"month-1\":\"Feb\",\"month-2\":\"Mar\",\"month-3\":\"Apr\",\"month-4\":\"May\",\"month-5\":\"Jun\",\"month-6\":\"Jul\",\"month-7\":\"Aug\",\"month-8\":\"Sep\",\"month-9\":\"Oct\",\"month-10\":\"Nov\",\"month-11\":\"Dec\"},\"fr\":{\"invalid\":\"Date invalide !\",\"month-0\":\"Jan\",\"month-1\":\"Fév\",\"month-2\":\"Mar\",\"month-3\":\"Avr\",\"month-4\":\"Mai\",\"month-5\":\"Jun\",\"month-6\":\"Jul\",\"month-7\":\"Aou\",\"month-8\":\"Sep\",\"month-9\":\"Oct\",\"month-10\":\"Nov\",\"month-11\":\"Déc\"}}","module.exports = {\"en\":{\"cancel\":\"Cancel\",\"close\":\"Close\",\"code\":\"Code:\",\"consultations\":\"Consultations\",\"consultations-count\":\"Consultations:\",\"create-stat\":\"Create Statistics\",\"create-stat-consultation\":\"Consult. Statistics\",\"create-stat-patient\":\"Patients Statistics\",\"date-min\":\"Start Date\",\"date-max\":\"End Date\",\"generating-report\":\"Generating report...\",\"loading\":\"Loading in progress...\",\"loading-report\":\"Loading report template...\",\"logout\":\"Logout\",\"patients\":\"Patients\",\"patients-count\":\"Patients:\",\"report\":\"To add an annual report, clic on the left pane's button bearing the following icon:\",\"stat-type\":\"Statistic Type\",\"struct\":\"Structure:\",\"welcome\":\"To add new statistics, clic on the left pane's button bearing the following icon:\"},\"fr\":{\"cancel\":\"Annuler\",\"close\":\"Fermer\",\"code\":\"Code :\",\"consultations\":\"Consultations\",\"consultations-count\":\"Consultations :\",\"create-stat\":\"Créer des statistiques\",\"create-stat-consultation\":\"Stats consultations\",\"create-stat-patient\":\"Stats patients\",\"date-min\":\"Date de début\",\"date-max\":\"Date de fin\",\"generating-report\":\"Rapport en cours de réalisation...\",\"loading\":\"Chargement en cours...\",\"loading-report\":\"Chargement du modèle de rapport...\",\"logout\":\"Déconnexion\",\"patients\":\"Patients\",\"patients-count\":\"Patients :\",\"report\":\"Pour éditer un rapport annuel, cliquez sur le bouton avec l'icône suivante dans le panneau de gauche :\",\"stat-type\":\"Type de statistique\",\"struct\":\"Structure :\",\"welcome\":\"Pour ajouter des statistiques, cliquez sur le bouton avec l'icône suivante dans le panneau de gauche : \"}}","module.exports = __webpack_public_path__ + \"static/media/report.d9d0dd18.fods\";","module.exports = {\"en\":{\"close\":\"Close\",\"export\":\"Export to Spreadsheet\",\"no-data\":\"There is no data for this period!\"},\"fr\":{\"close\":\"Fermer\",\"export\":\"Exporter vers un tableur\",\"no-data\":\"Il n'y a aucune donnée sur cette période !\"}}","import { IAction, IUser } from \"../types\"\n\nconst PREFIX = \"user:\";\nconst ATTRIBUTES = new Set(['nickname', 'language']);\n\nexport default {\n    INITIAL_STATE: { email: \"\", nickname: \"\", language: \"\", roles: [] },\n\n    reducer(state: IUser, action: IAction): IUser {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const attName = action.type.substr(PREFIX.length);\n        if (!ATTRIBUTES.has(attName)) {\n            throw Error(`Unknown attribute \"${attName}\"!`);\n        }\n        const attValue = action.data;\n        return Object.assign(state, { [attName]: attValue });\n    },\n\n    setLanguage(language: string): IAction {\n        return { type: \"user:language\", data: language };\n    },\n\n    setNickname(nickname: string): IAction {\n        return { type: \"user:nickname\", data: nickname };\n    }\n}\n","import { IAction, IOrganization } from \"../types\"\n\nconst PREFIX = \"organization:\";\n\nexport default {\n    INITIAL_STATE: [],\n\n    reducer(state: IOrganization[], action: IAction): IOrganization[] {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"set\": return set(state, action.organizations);\n            case \"add\": return add(state, action.organization);\n            case \"update\": return update(state, action.organization);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    setOrganizations(organizations: IOrganization[]): IAction {\n        return { type: \"organization:set\", organizations };\n    },\n\n    addOrganization(organization: IOrganization): IAction {\n        return { type: \"organization:add\", organization };\n    },\n\n    updateOrganization(organization: IOrganization): IAction {\n        return { type: \"organization:update\", organization };\n    }\n}\n\nfunction set(state: IOrganization[], organizations: IOrganization[]): IOrganization[] {\n    return organizations.slice();\n}\n\nfunction add(state: IOrganization[], organization: IOrganization): IOrganization[] {\n    const newState = state.slice();\n    newState.push(organization);\n    return newState;\n}\n\n\nfunction update(state: IOrganization[], organization: IOrganization): IOrganization[] {\n    return state.map(item => item.id === organization.id ? organization : item);\n}\n","import { IAction, ICarecenter } from \"../types\"\n\nconst PREFIX = \"carecenter:\";\n\nexport default {\n    INITIAL_STATE: [],\n\n    reducer(state: ICarecenter[], action: IAction): ICarecenter[] {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"set\": return set(state, action.carecenters);\n            case \"add\": return add(state, action.carecenter);\n            case \"update\": return update(state, action.carecenter);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    setCarecenters(carecenters: ICarecenter[]): IAction {\n        return { type: \"carecenter:set\", carecenters };\n    },\n\n    addCarecenter(carecenter: ICarecenter): IAction {\n        return { type: \"carecenter:add\", carecenter };\n    },\n\n    updateCarecenter(carecenter: ICarecenter): IAction {\n        return { type: \"carecenter:update\", carecenter };\n    }\n}\n\nfunction set(state: ICarecenter[], carecenters: ICarecenter[]): ICarecenter[] {\n    return carecenters.slice();\n}\n\nfunction add(state: ICarecenter[], carecenter: ICarecenter): ICarecenter[] {\n    const newState = state.slice();\n    newState.push(carecenter);\n    return newState;\n}\n\nfunction update(state: ICarecenter[], carecenter: ICarecenter): ICarecenter[] {\n    return state.map(\n        item => item.id === carecenter.id ? Object.assign(item, carecenter) : item);\n}\n","import { IStructure, IPatientField } from \"../types\"\r\nimport Intl from \"../tfw/intl\"\r\n\r\nexport default {\r\n    createPatientsFieldsFromStructure(structure: IStructure): { [key: string]: boolean } {\r\n        const patientsFields : { [key: string]: boolean }= {};\r\n        structure.patientFields.forEach((patientField: IPatientField) => {\r\n            patientsFields[patientField.id] = true;\r\n        });\r\n        return patientsFields;\r\n    },\r\n\r\n    createPatientsFieldsCaptionsFromStructure(structure: IStructure): { [key: string]: string } {\r\n        const patientsFieldsCaptions : { [key: string]: string }= {};\r\n        structure.patientFields.forEach((patientField: IPatientField) => {\r\n            patientsFieldsCaptions[patientField.id] = Intl.toText(patientField.caption);\r\n        });\r\n        return patientsFieldsCaptions;\r\n    },\r\n\r\n    getFieldCaption(key:string, structure:IStructure) {\r\n        if( key.charAt(0) !== '#') return key;\r\n        const item: {caption: string, type: string}|undefined =\r\n         structure.formFields[key];\r\n        if( !item ) return key;\r\n        return Intl.toText(item.caption);\r\n    }\r\n}\r\n","import { IAction, IStructure } from \"../types\"\n\nconst PREFIX = \"structure:\";\n\nexport default {\n    INITIAL_STATE: [],\n\n    reducer(state: IStructure[], action: IAction): IStructure[] {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"set\": return set(state, action.structures);\n            case \"add\": return add(state, action.structure);\n            case \"update\": return update(state, action.structure);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    setStructures(structures: IStructure[]): IAction {\n        return { type: \"structure:set\", structures };\n    },\n\n    addStructure(structure: IStructure): IAction {\n        return { type: \"structure:add\", structure };\n    },\n\n    updateStructure(structure: IStructure): IAction {\n        return { type: \"structure:update\", structure };\n    }\n}\n\nfunction set(state: IStructure[], structures: IStructure[]): IStructure[] {\n    return structures.slice();\n}\n\nfunction add(state: IStructure[], structure: IStructure): IStructure[] {\n    const newState = state.slice();\n    newState.push(structure);\n    return newState;\n}\n\nfunction update(state: IStructure[], structure: IStructure): IStructure[] {\n    return state.map(\n        item => item.id === structure.id ? Object.assign(item, structure) : item);\n}\n","import { IAction, IStatsConfig } from \"../types\"\nimport castString from \"../tfw/converter/string\"\nimport castBoolean from \"../tfw/converter/boolean\"\n\nconst PREFIX = \"stats-config:\";\n\nexport default {\n    INITIAL_STATE: {\n        statsType: \"consultations\",\n        dateMin: lastMonth(),\n        dateMax: today(),\n        patientsFields: {\n            birthday: true,\n            size: false,\n            nationality: true\n        },\n        patientsFieldsCaptions: {\n            birthday: \"Date de naissance\",\n            size: \"Taille\",\n            nationality: \"Nationalité\"\n        },\n        carecenter: {\n            id: 0,\n            organizationId: 0,\n            structureId: 0,\n            patientsCount: 0,\n            consultationsCount: 0,\n            name: \"\",\n            code: \"\"\n        }\n    },\n\n    reducer(state: IStatsConfig, action: IAction): IStatsConfig {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        switch (action.type.substr(PREFIX.length)) {\n            case \"setType\": return setType(state, action);\n            case \"setDateMin\": return setDateMin(state, action);\n            case \"setDateMax\": return setDateMax(state, action);\r\n            case \"setPatientsFields\": return setPatientsFields(state, action);\r\n            case \"setPatientField\": return setPatientField(state, action);\r\n            default: throw Error(`Unknown action \"${type}\"!`);\r\n        }\n    },\n\n    setType(statsType: \"patients\" | \"consultations\"): IAction {\n        return { type: \"stats-config:setType\", statsType };\n    },\n\n    setDateMin(date: number): IAction {\n        return { type: \"stats-config:setDateMin\", date };\n    },\n\n    setDateMax(date: number): IAction {\n        return { type: \"stats-config:setDateMax\", date };\n    },\n\n    setPatientsFields(fields: { [key: string]: boolean }): IAction {\n        return { type: \"stats-config:setPatientsFields\", fields };\n    },\n\n    setPatientField(fieldName: string, fieldVisibility: boolean): IAction {\n        return { type: \"stats-config:setPatientField\", fieldName, fieldVisibility };\n    }\n}\n\nfunction setType(state: IStatsConfig, action: IAction): IStatsConfig {\n    return {\n        ...state,\n        statsType: action.statsType || \"consultations\"\n    };\n}\n\nfunction setDateMin(state: IStatsConfig, action: IAction): IStatsConfig {\n    return {\n        ...state,\n        dateMin: action.date\n    };\n}\n\nfunction setDateMax(state: IStatsConfig, action: IAction): IStatsConfig {\n    return {\n        ...state,\n        dateMax: action.date\n    };\n}\n\nfunction setPatientsFields(state: IStatsConfig, action: IAction): IStatsConfig {\n    return {\n        ...state,\n        patientsFields: action.fields || {}\n    };\n}\n\nfunction setPatientField(state: IStatsConfig, action: IAction): IStatsConfig {\n    if (typeof action.fieldName !== 'string') {\n        throw Error(`action must have an attribute \"fieldName\" of type \"string\" but we found \"${typeof action.fieldName}\"`);\n    }\n    const fieldName: string = castString(action.fieldName, \"\");\n    const fieldVisibility: boolean = castBoolean(action.fieldVisibility, false);\n    return {\n        ...state,\n        patientsFields: {\n            ...state.patientsFields,\n            [fieldName]: fieldVisibility\n        }\n    };\n}\n\n\nfunction today() {\n    return Date.now();\n}\n\nfunction lastMonth() {\n    const today = new Date();\n    if (today.getDate() !== 1) {\n        const firstDayOfCurrentMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n        return firstDayOfCurrentMonth.getTime();\n    } else {\n        const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n        return lastMonth.getTime();\n    }\n}\n","import { IAction, IStatsConfig } from \"../types\"\nimport castString from \"../tfw/converter/string\"\nimport castBoolean from \"../tfw/converter/boolean\"\n\nconst PREFIX = \"stats:\";\n\nexport default {\n    INITIAL_STATE: [],\n\n    reducer(state: IStatsConfig[], action: IAction): IStatsConfig[] {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        switch (action.type.substr(PREFIX.length)) {\n            case \"addStat\": return addStat(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\r\n        }\n    },\n\n    addStat(stat: IStatsConfig): IAction {\n        return { type: \"stats:addStat\", stat };\n    }\n}\n\nfunction addStat(state: IStatsConfig[], action: IAction): IStatsConfig[] {\n    const stats = state.stats.slice();\n    stats.push( action.stat );\n    return stats;\n}\n","import { IStatsConfig } from \"../types\"\r\n\r\nexport default {\r\n    statsConfig(obj: IStatsConfig): string {\r\n        return `${obj.statsType}/${obj.dateMin}-${obj.dateMax}`;\r\n    }\r\n}\r\n","/**\n * The full state of the application is stored and managed here.\n */\nimport { createStore } from 'redux'\nimport User from \"./user\";\nimport Organizations from \"./organizations\"\nimport Carecenters from \"./carecenters\"\nimport Structure from \"../structure\"\nimport Structures from \"./structures\"\nimport StatsConfig from \"./stats-config\"\nimport Stats from \"./stats\"\nimport Hash from \"../util/hash\"\nimport { IState, IAction, IStatsConfig } from \"../types\"\n\nfunction dispatch(action: IAction) {\n    store.dispatch(action);\n}\n\nconst INITIAL_STATE: IState = {\n    user: User.INITIAL_STATE,\n    organizations: Organizations.INITIAL_STATE,\n    carecenters: Carecenters.INITIAL_STATE,\n    structures: Structures.INITIAL_STATE,\n    statsConfig: StatsConfig.INITIAL_STATE,\n    stats: Stats.INITIAL_STATE\n};\n\nfunction reducer(state: IState | undefined = INITIAL_STATE, action: IAction): IState {\n    console.log(\"state =\", state);\n    switch (action.type) {\n        case \"initStatsConfig\": return initStatsConfig(state, action);\n        case \"addStat\": return addStat(state, action);\n        case \"removeStat\": return removeStat(state, action);\n        default: return {\n            user: User.reducer(state.user, action),\n            stats: Stats.reducer(state.stats, action),\n            organizations: Organizations.reducer(state.organizations, action),\n            carecenters: Carecenters.reducer(state.carecenters, action),\n            structures: Structures.reducer(state.structures, action),\n            statsConfig: StatsConfig.reducer(state.statsConfig, action)\n        };\n    }\n}\n\nconst store = createStore(reducer);\n\nfunction addStat(state: IState, action: IAction): IState {\n    const h = Hash.statsConfig(state.statsConfig);\n    const stats = state.stats.filter(s => Hash.statsConfig(s) !== h);\n    stats.push({ ...state.statsConfig });\n    return { ...state, stats };\n}\n\nfunction removeStat(state: IState, action: IAction): IState {\n    const stats = state.stats.filter(s => Hash.statsConfig(s) !== action.key);\n    return { ...state, stats };\n}\n\nfunction initStatsConfig(state: IState, action: IAction): IState {\n    const carecenterId = action.carecenterId;\n    const carecenter = state.carecenters.find(c => c.id === carecenterId);\n    if (!carecenter) {\n        throw Error(`There is no Carecenter with id=${carecenterId}!`);\n    }\n    const structureId = carecenter.structureId;\n    if (typeof structureId !== 'number') {\n        throw Error('Missing attribute number \"structureId\"!');\n    }\n    const structure = state.structures.find(s => s.id === structureId);\n    if (!structure) {\n        throw Error(`There is no structure with id ${structureId}!`);\n    }\n    return {\n        ...state,\n        statsConfig: {\n            ...state.statsConfig,\n            carecenter,\n            patientsFields: Structure.createPatientsFieldsFromStructure(structure),\n            patientsFieldsCaptions: Structure.createPatientsFieldsCaptionsFromStructure(structure)\n        }\n    }\n}\n\nexport default {\n    store, dispatch,\n\n    User, Organizations, Carecenters, Structures, StatsConfig,\n\n    initStatsConfig(carecenterId: number): IAction {\n        return { type: \"initStatsConfig\", carecenterId };\n    },\n    addStat(): IAction {\n        return { type: \"addStat\" };\n    },\n    removeStat(key: string): IAction {\n        return { type: \"removeStat\", key };\n    }\n}\n","import WebService from \"../tfw/web-service\"\n\nexport default {\n    async list() {\n        return await WebService.exec(\"orga.list\");\n    }\n}\n","import WebService from \"../tfw/web-service\"\nimport { ICarecenter } from \"../types\"\n\ninterface IServiceCarecenter {\n    id: number;\n    name: string;\n    code: string;\n    patientsCount: number;\n    consultationsCount: number;\n    structure: number;\n}\n\nexport default {\n    async list( organizationId: number) : Promise<ICarecenter[]> {\n        const carecenters = await WebService.exec(\"carecenter.list\", organizationId);\n        return carecenters.map( (carecenter: IServiceCarecenter) => ({\n            id: carecenter.id,\n            name: carecenter.name,\n            code: carecenter.code,\n            patientsCount: carecenter.patientsCount,\n            consultationsCount: carecenter.consultationsCount,\n            structureId: carecenter.structure,\n            organizationId\n        }));\n    }\n}\n","import Intl from \"../tfw/intl\";\r\nconst _ = Intl.make(require(\"./parser.yaml\"));\r\n\r\n\r\n/**\r\n * Le fichier `types.org` définit tous  les types de données complexe.\r\n * Il  n'y a  pas  de type  très contraignant,  tous  les textes  sont\r\n * libres, mais on propose des listes pour faciliter la saisie. Chaque\r\n * élément  de cette  liste est  muni d'un  identifiant (précédé  d'un\r\n * dièse `#`).\r\n * Un type peut être hiérarchique. Par exemple, une adresse propose un\r\n * pays, une région,  un district, ... Les  propositions dépendent des\r\n * choix  précédents. Ainsi,  la liste  des propositions  de districts\r\n * dépend de la région sélectionnée.\r\n *\r\n * Le  parsing du  fichier `types.org`  se  fait ligne  par ligne.  On\r\n * ignore tous  les espaces/tabulations en  début de ligne.  Le nombre\r\n * d'astérisques  `*`  qui  commencent  une ligne  indique  le  niveau\r\n * hiérarchique.\r\n * Au  niveau 1,  on trouve  l'identifiant du  type qui  doit toujours\r\n * commencer par un dièse `#`.\r\n *\r\n * Voici un  exemple de  fichier en  entrée et de  comment on  doit le\r\n * traduire.\r\n * ```\r\n * #GENDER\r\n * * #H Homme\r\n * * #F Femme\r\n *\r\n * #LOCALIZATION\r\n * * Cameroun\r\n * ** Littoral\r\n * *** District 9\r\n * **** Village 1\r\n * **** Village 2\r\n * **** Village 3\r\n * *** Un peu plus loin\r\n * **** Village A\r\n * **** Village B\r\n * ** Centre\r\n * *** Pas tout près\r\n * **** Village Toto\r\n * *** Au fin fond du...\r\n * **** Village Alpha\r\n * **** Village Beta\r\n * **** Village Gama\r\n * ```\r\n *\r\n * ```\r\n * {\r\n *   \"#GENDER\": {\r\n *     \"#H\": { \"caption\": \"Homme\" },\r\n *     \"#F\": { \"caption\": \"Femme\" }\r\n *   },\r\n *   \"#LOCALIZATION\": {\r\n *     \"Cameroun\": { \"caption\": \"Cameroun\", \"children\": {\r\n *       \"Littoral\": { \"caption\": \"Littoral\", \"children\": {\r\n *         ...\r\n *       }},\r\n *       \"Centre\": { \"caption\": \"Centre\", \"children\": {\r\n *         ...\r\n *       }},\r\n *       ...\r\n *     }}\r\n *   }\r\n * }\r\n * ```\r\n */\r\n\r\n\r\nconst RX_LINE = /^(#[A-Z0-9-]+)?([^\\(@]*)(\\([^\\)]*\\)\\+?)?(@[A-Z0-9,-]+)?/;\r\n\r\n\r\nfunction parse(code: string) {\r\n    const types = {};\r\n    const levels = [types];\r\n    if (typeof code !== 'string') code = `${code}`;\r\n    code.split('\\n').forEach(function(line, lineNumber) {\r\n        try {\r\n            line = line.trim();\r\n            // Ignorer les lignes vides.\r\n            if (line.length === 0) return;\r\n            // Ignorer les commentaires.\r\n            if (line.substr(0, 2) === '//') return;\r\n            if (line.charAt(0) !== '*') throw _('err-1');\r\n\r\n            // Calculer le niveau hiérarchique `level`.\r\n            const level = computeLevel(line);\r\n            line = line.substr(level).trim();\r\n\r\n            if (level > levels.length) {\r\n                throw _('err-2', line, levels.length - 1, level);\r\n            }\r\n            while (levels.length > level) {\r\n                levels.pop();\r\n            }\r\n            const item = parseLine(line);\r\n            if (typeof levels[levels.length - 1][item.id] !== 'undefined') {\r\n                throw _('err-3', item.id);\r\n            }\r\n            levels[levels.length - 1][item.id] = item;\r\n            levels.push(item.children || {});\r\n        }\r\n        catch (ex) {\r\n            throw { lineNumber: lineNumber + 1, message: ex };\r\n        }\r\n    });\r\n    return types;\r\n};\r\n\r\n\r\n/**\r\n * @param   {string} line - Line to parse.\r\n * @returns {number} Number of leading '*' in the line.\r\n */\r\nfunction computeLevel(line: string): number {\r\n    let level = 0;\r\n    while (line.charAt(0) == '*') {\r\n        line = line.substr(1);\r\n        level++;\r\n    }\r\n    return level;\r\n}\r\n\r\n\r\nfunction parseLine(line: string) {\r\n    const item = { children: {} };\r\n    const m = RX_LINE.exec(line.trim());\r\n    if (m[2]) {\r\n        item.caption = m[2].trim();\r\n    }\r\n    if (m[1]) {\r\n        item.id = m[1].trim();\r\n    } else {\r\n        item.id = item.caption.toUpperCase();\r\n    }\r\n    if (m[3]) {\r\n        item.type = m[3].substr(1, m[3].length - 2).trim();\r\n    }\r\n    if (m[4]) {\r\n        item.tags = m[4].trim().substr(1).split(',').map(function(v) { return v.trim(); });\r\n    }\r\n    return item;\r\n}\r\n\r\n\r\n/**\r\n * @param {object} forms\r\n * {\r\n *   CONCLUSION: {\r\n *     caption: \"Conclusion\",\r\n *     children: {\r\n *       \"#SURGERY-GYN\": {\r\n *         caption: \"Chirurgie\",\r\n *         id: \"#SURGERY-GYN\",\r\n *         type: \"#SURGERY-GYN\"\r\n *       }\r\n *     }\r\n *   },\r\n *   ...\r\n * }\r\n * @return `[{ id:\"#SURGERY-GYN\", caption:\"Chirurgie\", path:[\"Conclusion\", \"Chirurgie\"] }, ...]`\r\n */\r\nfunction flattenFormsFields(forms) {\r\n    var list = [];\r\n    recursiveFlattenFormsFields(forms, list, []);\r\n    list.sort(function(a, b) {\r\n        var captionA = a.caption;\r\n        var captionB = b.caption;\r\n        if (captionA < captionB) return -1;\r\n        if (captionA > captionB) return +1;\r\n        return 0;\r\n    });\r\n    return list;\r\n}\r\n\r\n\r\nfunction recursiveFlattenFormsFields(children, list, path) {\r\n    Object.keys(children).forEach(function(key) {\r\n        var child = children[key];\r\n        if (typeof child.id === 'string' && child.id.charAt(0) === '#') {\r\n            // Leave.\r\n            list.push({\r\n                id: child.id,\r\n                caption: child.caption,\r\n                path: path.slice()\r\n            });\r\n        }\r\n        else if (child.children) {\r\n            // Node.\r\n            path.push(child.caption);\r\n            recursiveFlattenFormsFields(child.children, list, path);\r\n            path.pop();\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport default { parse, flattenFormsFields }\r\n","import WebService from \"../tfw/web-service\"\nimport Parser from \"../structure/parser\"\nimport Intl from \"../tfw/intl\"\nimport castString from \"../tfw/converter/string\"\nimport { IStructure, IPatientField } from \"../types\"\n\nexport interface IStructureService {\n    id: number;\n    name: string;\n    exams: string;\n    vaccins: string;\n    patient: string;\n    forms: string;\n    types: string;\n}\n\n\nexport default {\n    async list(organizationId: number) {\n        const structures: IStructureService[] =\n            await WebService.exec(\"structure.list\", organizationId);\n        return structures.map((structure: IStructureService) => (\r\n            {\n                id: structure.id,\n                organizationId,\n                name: structure.name,\n                patientFields: parsePatient(structure.patient),\n                formFields: parseFormFields(structure),\n                exams: parse(structure.exams),\n                vaccins: parse(structure.vaccins),\n                forms: parse(structure.forms),\n                types: parse(structure.types),\n                sources: {\n                    exams: structure.exams,\n                    vaccins: structure.vaccins,\n                    patient: structure.patient,\n                    forms: structure.forms,\n                    types: structure.types\n                }\n            }\r\n        ));\n    }\n}\n\n\nfunction parse(def: string) {\n    try {\n        return Parser.parse(def);\n    }\n    catch (ex) {\n        console.error(\"[parsePatient] \", ex);\n        console.log(def);\n    }\n    return null;\n}\n\nfunction parsePatient(stringifiedPatientDef: string): IPatientField[] {\n    try {\n        const raw = Parser.parse(stringifiedPatientDef);\n        const patients: IPatientField[] = Object.keys(raw).map((id: string) => {\n            const patient = raw[id];\n            return {\n                id,\n                type: patient.type,\n                caption: Intl.toIntl(patient.caption)\n            }\n        });\n        return patients;\n    }\n    catch (ex) {\n        console.error(\"[parsePatient] \", ex);\n    }\n    return [];\n}\n\ninterface IFlatField {\n    type: string;\n    caption: { [key: string]: string };\n}\n\nfunction parseFormFields(structure: IStructureService): { [key: string]: IFlatField } {\n    const result: { [key: string]: IFlatField } = {};\n    const fringe = [parse(structure.forms)];\n    while (fringe.length > 0) {\n        const item = fringe.shift();\n        for (const name of Object.keys(item)) {\n            const value = item[name];\n            result[name] = { caption: Intl.toIntl(value.caption) };\n            if (value.type) result[name].type = value.type;\n            if (value.children) {\n                fringe.push(value.children);\n            }\n        }\n    }\n    return result;\n}\n","/**\n * @export {function} .tokenize\n * @param {string} source - Stringification of a permissive JSON object.\n * @return {array} Array of tokens. A token is an object like this: `{}`.\n */\nconst OBJ_OPEN = 1;\nconst OBJ_CLOSE = 2;\nconst ARR_OPEN = 3;\nconst ARR_CLOSE = 4;\nconst STRING = 5;\nconst NUMBER = 6;\nconst SPECIAL = 7;  // true, false, null or undefined.\nconst COLON = 8;\n\nconst TYPE_NAMES = [\n    \"???\",\n    \"OBJ_OPEN\", \"OBJ_CLOSE\", \"ARR_OPEN\", \"ARR_CLOSE\",\n    \"STRING\", \"NUMBER\", \"SPECIAL\", \"COLON\"\n];\n\nexport default {\n    OBJ_OPEN,\n    OBJ_CLOSE,\n    ARR_OPEN,\n    ARR_CLOSE,\n    STRING,\n    NUMBER,\n    SPECIAL,  // true, false, null or undefined.\n    COLON,\n    tokenize(source: string) {\n        const ctx = new Context();\n        return ctx.tokenize(source);\n    },\n    getTypeName: function(type: string) { return TYPE_NAMES[type]; }\n};\n\nconst RX_DECIMAL = /^-?(\\.[0-9]+|[0-9]+(\\.[0-9]+)?)([eE]-?[0-9]+)?$/;\nconst RX_HEXA = /^-?0x[0-9a-f]+$/i;\nconst RX_OCTAL = /^-?0o[0-7]+$/i;\nconst RX_BINARY = /^-?0b[01]+$/i;\n\ninterface IToken {\n    type: number,\n    index: number,\n    value: string | number\n}\n\n\nclass Context {\n    private readonly eaters: (() => void)[]\n    private source: string = ''\n    private index: number = 0\n    private end: number = 0\n    private tokens: IToken[] = []\n\n    constructor() {\n        this.eaters = [\n            this.eatBlanks,\n            this.eatSymbol,\n            this.eatComment,\n            this.eatString,\n            this.eatIdentifier\n        ];\n    }\n\n    tokenize(source: string) {\n        this.source = source;\n        this.end = source.length;\n        this.index = 0;\n        this.tokens = [];\n\n        while (this.index < this.end) {\n            const currentSourceIndex = this.index;\n            for (let eaterIndex = 0; eaterIndex < this.eaters.length; eaterIndex++) {\n                const eater = this.eaters[eaterIndex];\n                eater();\n                if (this.index !== currentSourceIndex) break;\n            }\n            if (this.index === currentSourceIndex) {\n                // No eater has been pleased with this char.\n                this.fail(`Unexpected token at pos ${this.index}:\\n${source.substr(this.index, 80)}`);\n            }\n        }\n\n        return this.tokens;\n    }\n\n    fail(msg: string) {\n        if (typeof msg === 'undefined') msg = \"Invalid char at \" + this.index + \"!\"\n\n        throw { index: this.index, source: this.source, message: msg }\n    }\n\n    eos() {\n        return this.index >= this.end\n    }\n\n    peek() {\n        return this.eos() ? null : this.source[this.index];\n    }\n\n    next() {\n        return this.eos() ? null : this.source[this.index++];\n    }\n\n    back() { if (this.index > 0) this.index--; };\n\n    addToken(type: number, index: number = -1, value: any = '') {\n        if (index === -1) index = this.index;\n        this.tokens.push({ type, index, value })\n    }\n\n    eatBlanks = () => {\n        while (\" \\t\\n\\r\".indexOf(this.peek() || '?') !== -1) this.index++;\n    }\n\n    eatSymbol = () => {\n        let tkn = null;\n        const c = this.peek();\n        switch (c) {\n            case '{': tkn = OBJ_OPEN; break;\n            case '}': tkn = OBJ_CLOSE; break;\n            case '[': tkn = ARR_OPEN; break;\n            case ']': tkn = ARR_CLOSE; break;\n            case ':': tkn = COLON; break;\n            case ',':\n            // The comma is not mandatory.\n            this.index++;\n            return;\n        }\n        if (tkn) {\n            this.addToken(tkn);\n            this.index++;\n        }\n    }\n\n    eatComment = () => {\n        if (this.peek() !== '/') return;\n        this.index++;\n        const c = this.next();\n        if (c == '/') {\n            // Single line comment.\n            const endOfSingleComment = this.source.indexOf('\\n', this.index);\n            if (endOfSingleComment === -1) {\n                this.index = this.end;\n            } else {\n                this.index = endOfSingleComment + 1;\n            }\n        }\n        else if (c == '*') {\n            // Multi line comment.\n            const endOfComment = this.source.indexOf('*/', this.index);\n            if (endOfComment === -1) {\n                this.index = this.end;\n            } else {\n                this.index = endOfComment + 1;\n            }\n        }\n        else {\n            this.fail(\"'/' looks like a comment, but it is not!\");\n        }\n    }\n\n    eatString = () => {\n        const start = this.index;\n        const quote = this.peek();\n        if (quote !== '\"' && quote !== \"'\") return;\n        this.index++;\n        let escape = false;\n        let str = '';\n        while (!this.eos()) {\n            let c = this.next();\n            if (escape) {\n                escape = false;\n                if (c === 'n') c = '\\n';\n                else if (c === 'r') c = '\\r';\n                else if (c === 't') c = '\\t';\n                str += c;\n            }\n            else if (c === \"\\\\\") {\n                escape = true;\n            }\n            else if (c === quote) {\n                this.addToken(STRING, start, str);\n                return;\n            }\n            else {\n                str += c;\n            }\n        }\n        this.index = start;\n        this.fail(\"Missing en of string\");\n    }\n\n    eatIdentifier = () => {\n        const start = this.index;\n        let c = this.peek() || '?';\n        if (\" \\t\\n\\r,:[]{}/\".indexOf(c) !== -1) return;\n        this.index++;\n        let str: string | null | undefined | boolean = c;\n        while (!this.eos()) {\n            c = this.peek() || '?';\n            if (\" \\t\\n\\r,:[]{}/\".indexOf(c) !== -1) break;\n            str += c;\n            this.index++;\n        }\n        if (RX_DECIMAL.test(str)) {\n            this.addToken(NUMBER, start, parseFloat(str));\n        }\n        else if (RX_HEXA.test(str)) {\n            this.addToken(NUMBER, start, parseInt(str, 16));\n        }\n        else if (RX_OCTAL.test(str)) {\n            if (str.charAt(0) == '-') {\n                str = \"-\" + str.substr(3);\n            } else {\n                str = str.substr(2);\n            }\n            this.addToken(NUMBER, start, parseInt(str, 8));\n        }\n        else if (RX_BINARY.test(str)) {\n            if (str.charAt(0) == '-') {\n                str = \"-\" + str.substr(3);\n            } else {\n                str = str.substr(2);\n            }\n            this.addToken(NUMBER, start, parseInt(str, 2));\n        }\n        else {\n            let type = SPECIAL;\n            if (str === 'null') str = null;\n            else if (str === 'undefined') str = undefined;\n            else if (str === 'true') str = true;\n            else if (str === 'false') str = false;\n            else type = STRING;\n            this.addToken(type, start, str);\n        }\n    }\n}\n","import Tokenizer from \"./tokenizer\"\n\nexport default { parse }\n\nfunction parse( text: string ) {\n  try {\n    var tokens = Tokenizer.tokenize( text );\n    var parser = new Parser( tokens );\n    var result = parser.parse();\n    return result;\n  }\n  catch( ex ) {\n    if( typeof ex.type === 'number' ) {\n      throw ex;\n    } else {\n      throw ex;\n    }\n  }\n};\n\n\nclass Parser {\n    constructor(private tokens) {\n        this.index = 0\n    }\n}\n\n\nParser.prototype.peek = function() {\n  return this.tokens[this.index];\n};\n\n\nParser.prototype.next = function() {\n  return this.tokens[this.index++];\n};\n\n\nParser.prototype.back = function() {\n  this.index = Math.max( 0, this.index - 1 );\n};\n\n\nParser.prototype.parse = function() {\n  var tkn = this.next();\n\n  switch( tkn.type ) {\n  case Tokenizer.OBJ_OPEN:\n    return this.parseObject();\n  case Tokenizer.ARR_OPEN:\n    return this.parseArray();\n  case Tokenizer.STRING:\n  case Tokenizer.NUMBER:\n  case Tokenizer.SPECIAL:\n    return tkn.value;\n  }\n  this.back();\n  this.fail( tkn );\n};\n\n\nParser.prototype.parseArray = function() {\n  var start = this.index;\n  var arr = [];\n  var tkn;\n  while( undefined !== (tkn = this.peek()) ) {\n    if( tkn.type === Tokenizer.ARR_CLOSE ) {\n      this.next();\n      return arr;\n    }\n    arr.push( this.parse() );\n  }\n  this.fail(\"Opening braket at position \" + start + \" has no corresponding closing one!\", start);\n};\n\n\nParser.prototype.parseObject = function() {\n  var start = this.index;\n  var obj = {};\n  var tkn;\n  var key, val;\n  var indexForMissingKey = 0;\n  while( undefined !== (tkn = this.peek()) ) {\n    if( tkn.type === Tokenizer.OBJ_CLOSE ) {\n      this.next();\n      return obj;\n    }\n    key = this.parse();\n    tkn = this.peek();\n    if( tkn.type === Tokenizer.OBJ_CLOSE ) {\n      obj[indexForMissingKey++] = key;\n      this.next();\n      return obj;\n    }\n    else if( tkn.type === Tokenizer.COLON ) {\n      this.next();\n      val = this.parse();\n      obj[key] = val;\n    }\n    else {\n      // Missing key.\n      obj[indexForMissingKey++] = key;\n    }\n  }\n  this.fail(\"Opening brace at position \" + start + \" has no corresponding closing one!\", start);\n};\n\n\nParser.prototype.fail = function( tkn, index ) {\n  if( typeof tkn === 'string' ) {\n    throw { message: tkn, index: index };\n  }\n  throw {\n    index: tkn.index,\n    message: \"Unexpected token \" + Tokenizer.getTypeName(tkn.type) + \" at position \" + tkn.index + \"!\"\n  };\n};\n","export default {\n    saveAs(blob: Blob, fileName: string) {\n        const url = window.URL.createObjectURL(blob);\n        const anchorElem = document.createElement(\"a\");\n\n        anchorElem.style.display = \"none\";\n        anchorElem.href = url;\n        anchorElem.download = fileName;\n\n        document.body.appendChild(anchorElem);\n        anchorElem.click();\n\n        document.body.removeChild(anchorElem);\n\n        // On Edge, revokeObjectURL should be called only after\n        // a.click() has completed, atleast on EdgeHTML 15.15048\n        setTimeout(function() {\n            window.URL.revokeObjectURL(url);\n        }, 5000);\n    }\n}\n","export default {\n    padNumber(value: number, size: number = 6, fillWith: string = '0'): string {\n        let text = `${value}`;\n        while (text.length < size) {\n            text = fillWith.charAt(0) + text;\n        }\n        return text;\n    },\n\n    clamp(value: number, min: number = 0, max: number = 1) {\n        if (value < min) return min;\n        if (value > max) return max;\n        return value;\n    },\n\n    loadTextFromFile(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader: FileReader = new FileReader();\n            reader.onload = (data) => {\n                const content = `${data.target.result}`;\n                resolve(content);\n            };\n            reader.onerror = (err) => {\n                reject(err);\n            };\n            reader.readAsText(file);\n        })\n    },\n\n    loadTextFromURL(url: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            fetch(url)\n                .then((response: Response) => {\n                    if (!response.ok) {\n                        reject(`Error ${response.status}: ${response.statusText}!`);\n                    }\n                    return response.text();\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n    },\n\n    loadJsonFromURL(url: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            fetch(url)\n                .then((response: Response) => {\n                    return response.json();\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n    }\n}\n","import React from \"react\"\r\nimport Button from \"../button\"\r\n\r\nimport \"./input-file.css\"\r\n\r\ninterface IInputFileProps {\r\n    label?: string;\r\n    icon?: string;\r\n    wide?: boolean;\r\n    wait?: boolean;\r\n    flat?: boolean;\r\n    small?: boolean;\r\n    warning?: boolean;\r\n    enabled?: boolean;\r\n    multiple?: boolean;\r\n    accept?: string;  // Ex.: \"image/png,image/jpeg\", \".png,.jpg\", \"image/*\", ... See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Unique_file_type_specifiers\r\n    classes?: string[] | string;\r\n    onClick?: (files: FileList) => void;\r\n}\r\n\r\nexport default class InputFile extends React.Component<IInputFileProps, {}> {\r\n    private readonly refInput: React.RefObject<HTMLInputElement> = React.createRef();\r\n\r\n    constructor( props: IInputFileProps ) {\r\n        super( props );\r\n        this.handleClick = this.handleClick.bind( this );\r\n        this.handleFileChange = this.handleFileChange.bind( this );\r\n    }\r\n\r\n    static readFileAsText(file: File): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const reader: FileReader = new FileReader();\r\n            reader.onload = (data) => {\r\n                const content = data.target.result;\r\n                resolve(content);\r\n            };\r\n            reader.onerror = (err) => {\r\n                reject(err);\r\n            };\r\n            reader.readAsText(file);\r\n        })\r\n    }\r\n\r\n    handleFileChange(evt: React.ChangeEvent<HTMLInputElement>) {\r\n        if( !evt.target ) return;\r\n\r\n        const handler = this.props.onClick;\r\n        if (typeof handler !== 'function') return;\r\n\r\n        try {\r\n            const input = evt.target as HTMLInputElement;\r\n            const files = input.files;\r\n            if( !files ) return;\r\n            handler(files);\r\n        } catch(ex) {\r\n            console.error(\"Error in handleFileChange(): \", );\r\n            console.error(ex);\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        const input = this.refInput.current;\r\n        if( !input ) return;\r\n        input.click();\r\n    }\r\n\r\n    render() {\r\n        const p = this.props;\r\n        const classes = [\"tfw-view-InputFile\"];\r\n        if( p.wide === true ) classes.push(\"wide\");\r\n\r\n        return (<div className={classes.join(\" \")}>\r\n            <Button\r\n                label={p.label}\r\n                icon={p.icon}\r\n                wide={p.wide}\r\n                wait={p.wait}\r\n                flat={p.flat}\r\n                small={p.small}\r\n                warning={p.warning}\r\n                enabled={p.enabled}\r\n                classes={p.classes}\r\n                onClick={this.handleClick}/>\r\n            <input\r\n                ref={this.refInput}\r\n                type=\"file\"\r\n                accept={p.accept}\r\n                multiple={p.multiple === true}\r\n                onChange={this.handleFileChange} />\r\n        </div>)\r\n    }\r\n}\r\n","import * as React from \"react\"\nimport castArray from \"../converter/array\"\nimport castBoolean from \"../converter/boolean\"\nimport TouchableBehavior from \"../behavior/touchable\"\nimport \"./touchable.css\"\n\ninterface ITouchableProps {\n    enabled?: boolean;\n    onClick?: ()=>void;\n    title?: string;\n    classNames?: string[];\n    color?: string;\n    children?: React.ReactElement<any>|React.ReactElement<any>[];\n}\n\nexport default class Touchable extends React.Component<ITouchableProps, {}> {\n    readonly touchable: TouchableBehavior;\n    private ref = React.createRef();\n\n    constructor(props: ITouchableProps) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.touchable = new TouchableBehavior({onTap: this.handleClick, color: props.color});\n    }\n\n    componentDidMount() {\n        const element = this.ref.current;\n        if (!element) return;\n        this.touchable.element = element;\n    }\n\n    handleClick() {\n        const handler = this.props.onClick;\n        if( typeof handler === 'function') {\n            handler();\n        }\n    }\n\n    render() {\n        const p = this.props;\n        const enabled = castBoolean(p.enabled, true);\n        const classes = [\"tfw-view-touchable\"].concat(castArray(p.classNames));\n        if( enabled ) classes.push(\"enabled\");\n        return <div ref={this.ref}\n                tabIndex={0}\n                className={classes.join(\" \")}\n                title={p.title}>{\n            p.children\n        }</div>\n    }\n}\n","import React from \"react\"\nimport Icon from '../icon'\nimport Touchable from '../touchable'\n\nimport \"./expand.css\"\n\ninterface IExpandProps {\n    label: string,\n    value: boolean,\n    onValueChange: (value: boolean) => void\n}\n\nexport default class Expand extends React.Component<IExpandProps, {}> {\n    handleValueChange = () => {\n        this.props.onValueChange(!this.props.value)\n    }\n\n    render() {\n        const classes = [\"tfw-view-Expand\"]\n        if (this.props.value) {\n            classes.push(\"expand\")\n        }\n\n        return (<div className={classes.join(' ')}>\n            <Touchable classNames={[\"head\"]} onClick={this.handleValueChange}>\n                <div className=\"icons\">\n                    <Icon content=\"plus-o\" size={24}/>\n                    <Icon content=\"minus-o\" size={24}/>\n                </div>\n                <div>{this.props.label}</div>\n            </Touchable>\n            <div className=\"body\">{\n                this.props.children\n            }</div>\n        </div>)\n    }\n}\n","type Action = (...args: any[]) => void;\r\n\r\n/**\r\n * The function to call as much as you want. It will perform the debouce for you.\r\n * Put in the same args as the `action` function.\r\n *\r\n * * action -  Action to call. Two consecutive actions cannot be  called if there is\r\n * less than `delay` ms between them.\r\n * * delay - Number of milliseconds.\r\n */\r\nexport default function (action: Action, delay: number): Action {\r\n    let timer: number = 0;\r\n\r\n    return function(this: { delay: number }, ...args: any[]) {\r\n        if (timer) window.clearTimeout(timer);\r\n        timer = window.setTimeout(() => {\r\n            timer = 0;\r\n            action(...args);\r\n        }, delay) as number;\r\n    }\r\n}\r\n","import * as React from \"react\"\nimport \"../theme.css\"\nimport \"./input-date.css\"\nimport castInteger from \"../converter/integer\"\nimport castBoolean from \"../converter/boolean\"\nimport castString from \"../converter/string\"\nimport Debouncer from \"../debouncer\"\n\nimport Intl from \"../intl\"\nconst _ = Intl.make(require(\"./input-date.yaml\"));\n\ninterface INumberSlot {\n    (value: number): void;\n}\n\ninterface IInputProps {\n    label?: string;\n    value?: number;\n    wide?: boolean;\n    focus?: boolean;\n    onChange?: INumberSlot\n}\n\ninterface IInputState {\n    error?: string;\n}\n\nexport default class Input extends React.Component<IInputProps, IInputState> {\n    readonly inputDay: React.RefObject<HTMLInputElement>;\n    readonly inputMonth: React.RefObject<HTMLSelectElement>;\n    readonly inputYear: React.RefObject<HTMLInputElement>;\n\n    constructor(props: IInputProps) {\n        super(props);\n        this.state = {};\n        this.handleChange = Debouncer(this.handleChange.bind(this), 300);\n        this.inputDay = React.createRef();\n        this.inputMonth = React.createRef();\n        this.inputYear = React.createRef();\n    }\n\n    handleChange(): void {\n        try {\n            const day = parseInt(this.inputDay.current.value);\n            if (isNaN(day)) throw \"day is not a number!\";\n            const month = parseInt(this.inputMonth.current.value);\n            if (isNaN(month)) throw \"month is not a number!\";\n            const year = parseInt(this.inputYear.current.value);\n            if (isNaN(year)) throw \"year is not a number!\";\n\n            const date = new Date(year, month, day);\n            if (date.getFullYear() !== year || date.getMonth() !== month || date.getDate() !== day) {\n                throw \"Invalid date!\";\n            }\n            this.setState({ error: \"\" });\n\n            const handler = this.props.onChange;\n            if (typeof handler !== 'function') return;\n            handler(date.getTime());\n        }\n        catch (ex) {\n            this.setState({ error: _(\"invalid\") });\n        }\n    }\n\n    render() {\n        const\n            p = this.props,\n            label = castString(p.label, \"\"),\n            value = castInteger(p.value, 0),\n            wide = castBoolean(p.wide, false),\n            error = castString(this.state.error, \"\"),\n            date = new Date(value),\n            id = nextId();\n        const classes = [\"tfw-view-input-date\", \"thm-ele-button\"];\n        if (wide) classes.push(\"wide\");\n        const header = (error.length > 0 ? <div className=\"thm-bgSD error\">{error}</div> :\n            (label ? (<label htmlFor={id} className=\"thm-bgPD\">{label}</label>) : null));\n        return (<div className={classes.join(\" \")} >\n            {header}\n            <div className=\"inputs\">\n                <input\n                    ref={this.inputDay}\n                    className=\"day\"\n                    type=\"number\"\n                    maxLength=\"2\"\n                    min=\"1\"\n                    max=\"31\"\n                    id={id}\n                    size=\"2\"\n                    onChange={this.handleChange}\n                    defaultValue={date.getDate()} />\n                <select ref={this.inputMonth}\n                    onChange={this.handleChange}\n                    defaultValue={date.getMonth()}>{\n                        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(monthId => (\n                            <option key={monthId} value={monthId}>{_(`month-${monthId}`)}</option>\n                        ))\n                    }</select>\n                <input\n                    ref={this.inputYear}\n                    className=\"year\"\n                    type=\"number\"\n                    maxLength=\"4\"\n                    size=\"4\"\n                    onChange={this.handleChange}\n                    defaultValue={date.getFullYear()} />\n            </div>\n        </div>);\n    }\n}\n\n\nlet globalId = 0;\nfunction nextId() {\n    return `tfw-view-input-${globalId++}`;\n}\n\n\nconst NUMBER_VALIDATOR = (value: string) => isNaN(parseFloat(value)) ? _('nan') : true;\n","import React from \"react\"\nimport { IFormField, ITypes, IType } from '../types'\nimport Combo from '../tfw/view/combo'\nimport Expand from '../tfw/view/expand'\nimport Checkbox from '../tfw/view/checkbox'\nimport InputDate from '../tfw/view/input-date'\nimport Storage from '../tfw/storage'\n\nimport \"./form-field.css\"\n\ninterface IFormFieldProps {\n    field: IFormField,\n    types: ITypes\n}\n\ninterface IFormFieldState {\n    values: { [key: string]: any }\n}\n\nexport default class FormField extends React.Component<IFormFieldProps, IFormFieldState> {\n    constructor( props: IFormFieldProps ) {\n        super( props );\n        this.state = { values: Storage.local.get(\"web-soins/form-field/values\", {}) }\n    }\n\n    setValue = (key: string, val: any) => {\n        const values = {\n            ...this.state.values,\n            [key]: val\n        }\n\n        Storage.local.set(\"web-soins/form-field/values\", values)\n        this.setState({ values }, () => {\n            console.info(\"key, val, values=\", key, val, values);\n        })\n    }\n\n    render() {\n        return (<div className=\"FormField\">{\n            this.renderField(this.props.field)\n        }</div>)\n    }\n\n    renderField = (field: IFormField): React.ReactNode => {\n        const { id, caption, children } = field\n        if (id.charAt(0) === '#') {\n            return this.renderTypedField(field, this.props.types)\n        }\n        return <Expand  key={id}\n                        label={caption}\n                        value={this.state.values[id]}\n                        onValueChange={(value: boolean) => this.setValue(id, value)}>\n                    <div>{\n                        Object.values(children).map(this.renderField)\n                    }</div>\n                </Expand>\n    }\n\n    renderTypedField(field: IFormField, types: ITypes): React.ReactNode {\n        const { id, caption, tags } = field\n        const typeId = field.type || '?'\n        const type = types[typeId]\n\n        if (!type) {\n            if (Array.isArray(tags)) {\n                if (tags.indexOf(\"@BOOL\")) {\n                    return <Checkbox key={id}\n                                label={`${caption} (${id})`}\n                                value={this.state.values[id]}\n                                onChange={(v: boolean) => this.setValue(id, v)}/>\n                }\n                if (tags.indexOf(\"@DATE\")) {\n                    return <InputDate key={id}\n                                label={`${caption} (${id})`}\n                                value={this.state.values[id]}\n                                onChange={(v: number) => this.setValue(id, v)}/>\n                }\n            }\n            return <pre key={id} className=\"error\">{\n                JSON.stringify(field, null, '  ')\n                + \"\\nTAGS: \" + JSON.stringify(tags)\n            }</pre>\n        }\n\n        return <Combo key={id}\n                    label={`${caption} (${id})`}\n                    value={this.state.values[id]}\n                    onChange={(v: string) => this.setValue(id, v)}>{\n            Object.values(type.children).map((t: IType) => (\n                <div key={t.id}>{t.caption} <em>({t.id})</em></div>\n            ))\n        }</Combo>\n    }\n}\n","import React from \"react\"\nimport InputFile from '../tfw/view/input-file'\nimport State from '../state'\nimport FormFieldView from '../presentational/form-field'\nimport { IStructure, IFormField, ITypes } from '../types'\n\nimport \"./report-view.css\"\n\ninterface IReportViewProps {\n    carecenter: number,\n    onFilesChange: (files: FileList) => void\n}\n\ninterface IReportViewState {\n    forms: { [key: string]: IFormField },\n    types: ITypes\n}\n\nexport default class ReportView extends React.Component<IReportViewProps, IReportViewState> {\n    constructor( props: IReportViewProps ) {\n        super( props );\n        this.state = { forms: {}, types: {} }\n    }\n\n    componentDidMount() {\n        const { carecenter } = this.props\n        const state = State.store.getState()\n        const structure = state.structures.find((s: IStructure) => s.id === carecenter);\n        if (!structure) return\n        this.setState({\n            forms: structure.forms,\n            types: structure.types\n        })\n    }\n\n    handleFilesChange = (files: FileList) => {\n        this.props.onFilesChange(files)\n    }\n\n    render() {\n        const { forms, types } = this.state\n\n        return (<div className=\"report-ReportView\">\n            <div>\n                <InputFile\n                    wide={true}\n                    icon=\"table\"\n                    label=\"Load report template from disk (*.fods)\"\n                    accept=\"fods\"\n                    multiple={true}\n                    onClick={this.handleFilesChange}/>\n                <p>\n                    Report templates are spreadsheet saved as\n                    <b>Flat XML Spreadsheet</b> with placeholders like the following ones:\n                </p>\n                <ul>\n                    <li><code>{'{{newPatients [Y,1,1] [Y,4,1]}}'}</code>: </li>\n                    <li><code>{'{{newPatients [Y,1,1] [Y,4,1] filter:[GENDER #F]}}'}</code>: </li>\n                    <li><code>{'{{newPatients [Y,1,1] [Y,4,1] filter:[age 18 40]}}'}</code>: </li>\n                    <li><code>{'{{visits [Y,1,1] [Y,4,1]}}</code>'}</code>: </li>\n                    <li><code>{'{{visits [Y,1,1] [Y,4,1] filter:{MOTIF-CONSULTATION: #GENITAL-LEAK}}}'}</code>: </li>\n                    <li><code>{'{{visits [Y,1,1] [Y,4,1] group:day}}'}</code>: </li>\n                </ul>\n            </div>\n            <div>{\n                Object.values(forms).map((field: IFormField) => (\n                    <FormFieldView key={field.id} types={types} field={field}/>\n                ))\n            }</div>\n        </div>)\n    }\n}\n","import Intl from \"./tfw/intl\";\nexport default Intl.make(require(\"./App.yaml\"));\n","import React from \"react\"\n\nimport PermissiveJSON from '../tfw/permissive-json'\nimport FileAPI from '../tfw/fileapi'\nimport Icon from '../tfw/view/icon'\nimport Button from '../tfw/view/button'\nimport Dialog from '../tfw/factory/dialog'\nimport Util from '../tfw/util'\nimport ReportView from './report-view'\nimport WS from '../tfw/web-service'\nimport _ from \"../intl\";\n\nimport LibreOfficeCalcTemplate from './report.fods'\n\nimport \"./report.css\"\n\nexport default { generate }\n\n\nasync function generate(extraData: {}) {\n    Dialog.alert(<div className=\"report-icons-container\">\n        <div>\n            <Icon content=\"report\" size={96} onClick={() => generateFromTemplate(extraData)}/>\n            <div>Rapport annuel</div>\n        </div>\n        <div>\n            <Icon content=\"file\" size={96} onClick={() => generateFromUserProvidedFile(extraData)}/>\n            <div><i>Générique...</i></div>\n        </div>\n    </div>)\n}\n\nasync function generateFromTemplate(extraData: {}) {\n    const content = await Dialog.wait(\n        _('loading-report'),\n        Util.loadTextFromURL(LibreOfficeCalcTemplate)\n    )\n    Dialog.wait(_(\"generating-report\"), doGenerate(content, extraData))\n}\n\nfunction generateFromUserProvidedFile(extraData: {}) {\n    const onFilesChange = async (files: FileList) => {\n        for(const file of files) {\n            const content = await Util.loadTextFromFile(file)\n            Dialog.wait(_(\"generating-report\"), doGenerate(content, extraData))\n        }\n        dialog.hide()\n    }\n\n    const dialog = Dialog.show({\n        content: <ReportView\n                    carecenter={extraData.carecenter}\n                    onFilesChange={onFilesChange}/>,\n        footer: <Button label=\"Close\" icon=\"cancel\" onClick={() => dialog.hide()}/>\n    })\n}\n\n\nasync function doGenerate(content: string, extraData: {}) {\n    //const content = await Util.loadTextFromURL(LibreOfficeCalcTemplate)\n    const domParser = new DOMParser();\n    const doc = domParser.parseFromString(content, \"application/xml\");\n    const placeholders: HTMLElement[] = []\n    findPlaceholders(doc.documentElement, placeholders)\n\n    const query = placeholders\n        .map((elem: HTMLElement) => {\n            const content = (elem.textContent || '{}').trim().substr(1)\n            try {\n                return {\n                    ...PermissiveJSON.parse(content.substr(0, content.length - 1)),\n                    ...extraData\n                }\n            }\n            catch (ex) {\n                console.error(ex)\n                console.info(\"elem=\", elem);\n                return { [0]: 'echo', [1]: content }\n            }\n        })\n    console.info(\"query=\", query);\n    const data = await WS.exec(\"report\", query)\n    console.info(\"data=\", data);\n\n    data.forEach((text: string, index: number) => {\n        const elem = placeholders[index]\n        const value = parseFloat(text)\n        elem.textContent = text\n        if (!Number.isNaN(value)) {\n            // We must tell Calc that this content is a number.\n            const parent = elem.parentElement\n            if (!parent) return\n            parent.setAttribute(\"office:value-type\", \"float\")\n            parent.setAttribute(\"calcext:value-type\", \"float\")\n            parent.setAttribute(\"office:value\", text)\n        }\n    })\n\n    const serializer = new XMLSerializer();\n    const xml = serializer.serializeToString(doc);\n\n    await FileAPI.saveAs(new Blob([xml]), \"report.ods\")\n}\n\n\nfunction findPlaceholders(element: HTMLElement, placeholders: HTMLElement[]) {\n    switch (element.nodeType) {\n        case Node.ELEMENT_NODE:\n            if (element.nodeName === 'text:p') {\n                const content = (element.textContent || '').trim()\n                if (content.startsWith('{{') && content.endsWith('}}')) {\n                    placeholders.push(element)\n                }\n            } else {\n                for (const child of element.childNodes) {\n                    findPlaceholders(child, placeholders)\n                }\n            }\n    }\n}\n","import * as React from \"react\"\nimport { ICarecenter, IStructure } from \"../types\"\nimport Button from \"../tfw/view/button\"\nimport Report from '../report'\nimport _ from \"../intl\";\n\nimport \"./carecenter-header.css\"\n\n\ninterface ICarecenterHeaderProps {\n    carecenter: ICarecenter;\n    structures: IStructure[];\n    onStatClick: (carecenter: ICarecenter) => void;\n    onStructClick: (carecenter: ICarecenter) => void;\n}\n\nexport default class CarecenterHeader extends React.Component<ICarecenterHeaderProps, {}> {\n    constructor(props: ICarecenterHeaderProps) {\n        super(props);\n        this.handleStatClick = this.handleStatClick.bind(this);\n    }\n\n    handleStatClick = () => {\n        const handler = this.props.onStatClick;\n        if (typeof handler !== 'function') return;\n        handler(this.props.carecenter);\n    }\n\n    handleStructClick = () => {\n        const handler = this.props.onStructClick;\n        if (typeof handler !== 'function') return;\n        handler(this.props.carecenter);\n    }\n\n    handleReportClick = () => {\n        const { carecenter } = this.props\n        Report.generate({ carecenter: carecenter.id })\n    }\n\n    render() {\n        const carecenter: ICarecenter = this.props.carecenter;\n        const structure: IStructure | undefined = this.props.structures.find(s => s.id === carecenter.structureId);\n\n        return (<div className=\"presentational-carecenter-header\">\n            <div>\n                <div className=\"name\">{carecenter.name}</div>\n                <div className=\"prop\">\n                    <div>{_(\"code\")}</div>\n                    <div>{carecenter.id}-{carecenter.code}</div>\n                </div>\n                <div className=\"prop\">\n                    <div>{_(\"patients-count\")}</div>\n                    <div>{carecenter.patientsCount}</div>\n                </div>\n                <div className=\"prop\">\n                    <div>{_(\"consultations-count\")}</div>\n                    <div>{carecenter.consultationsCount}</div>\n                </div>\n                <div className=\"prop\">\n                    <div>{_(\"struct\")}</div>\n                    <div>{structure ? structure.name : '...'}</div>\n                </div>\n            </div>\n            <div className=\"buttons\">\n                <Button icon=\"stat\" small={true} onClick={this.handleStatClick} /><br />\n                <Button icon=\"report\" small={true} onClick={this.handleReportClick} /><br />\n            </div>\n        </div>);\n    }\n}\n","import React from \"react\"\r\nimport castArray from \"../tfw/converter/array\"\r\nimport castString from \"../tfw/converter/string\"\r\nimport castInteger from \"../tfw/converter/integer\"\r\nimport Flex from \"../tfw/layout/flex\"\r\nimport Combo from \"../tfw/view/combo\"\r\nimport InputDate from \"../tfw/view/input-date\"\r\nimport StatsPatientsConfig from \"../container/stats-patients-config\"\r\nimport { IStatsConfig } from \"../types\"\r\nimport _ from \"../intl\"\r\n\r\ninterface IStatsConfigProps extends IStatsConfig {\r\n    onTypeChange?: (type: string) => void;\r\n    onDateMinChange?: (date: number) => void;\r\n    onDateMaxChange?: (date: number) => void;\r\n}\r\n\r\nexport default class StatsConfig extends React.Component<IStatsConfigProps, {}> {\r\n    constructor(props: IStatsConfigProps) {\r\n        super(props);\r\n        this.handleTypeChange = this.handleTypeChange.bind(this);\r\n        this.handleDateMinChange = this.handleDateMinChange.bind(this);\r\n        this.handleDateMaxChange = this.handleDateMaxChange.bind(this);\r\n    }\r\n\r\n    handleTypeChange(index: number) {\r\n        const handler = this.props.onTypeChange;\r\n        if (typeof handler !== 'function') return;\r\n        handler(index === 0 ? 'patients' : 'consultations');\r\n    }\r\n\r\n    handleDateMinChange(date: number) {\r\n        const handler = this.props.onDateMinChange;\r\n        if (typeof handler !== 'function') return;\r\n        try {\r\n            handler(date);\r\n        } catch (ex) {\r\n            console.error(\"Error in handleDateMinChange(date): \", date);\r\n            console.error(ex);\r\n        }\r\n    }\r\n\r\n    handleDateMaxChange(date: number) {\r\n        const handler = this.props.onDateMaxChange;\r\n        if (typeof handler !== 'function') return;\r\n        try {\r\n            handler(date);\r\n        } catch (ex) {\r\n            console.error(\"Error in handleDateMaxChange(date): \", date);\r\n            console.error(ex);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const p = this.props;\r\n        const type = castString(p.statsType, \"consultations\");\r\n        const dateMin = castInteger(p.dateMin, Date.now());\r\n        const dateMax = castInteger(p.dateMax, Date.now());\r\n        const types = [\"consultations\", \"patients\"];\r\n\r\n        return (<div>\r\n            <Combo\r\n                wide={true}\r\n                label={_(\"stat-type\")}\r\n                keys={types}\r\n                value={type}\r\n            >{\r\n                    types.map(type => (\r\n                        <div key={type}>{_(type)}</div>\r\n                    ))\r\n                }</Combo>\r\n            <Flex>\r\n                <div><InputDate\r\n                    label={_(\"date-min\")}\r\n                    onChange={this.handleDateMinChange}\r\n                    value={dateMin} /></div>\r\n                <div><InputDate\r\n                    label={_(\"date-max\")}\r\n                    onChange={this.handleDateMaxChange}\r\n                    value={dateMax} /></div>\r\n            </Flex>\r\n        </div>);\r\n        /*\r\n        return (\r\n            <Tabstrip\r\n                value={value}\r\n                headers={[_(\"patients\"), _(\"consultations\")]}\r\n                onChange={this.handleTypeChange}\r\n            >\r\n                <StatsPatientsConfig\r\n                    dateMin={dateMin}\r\n                    dateMax={dateMax} />\r\n                <div>Not implemented yet!</div>\r\n            </Tabstrip>\r\n        )*/\r\n    }\r\n}\r\n","import { connect } from 'react-redux'\nimport StatsConfig from \"../presentational/stats-config\"\nimport Actions from \"../state/stats-config\"\nimport { IState, IDispatchFunction } from \"../types\"\n\nfunction mapStateToProps(state: IState) {\n    return {\n        statsType: state.statsConfig.statsType,\n        dateMin: state.statsConfig.dateMin,\n        dateMax: state.statsConfig.dateMax\n    }\n}\n\nfunction mapDispatchToProps(dispatch: IDispatchFunction) {\n    return {\n        onTypeChange(type: \"patients\" | \"consultations\") {\n            dispatch(Actions.setType(type));\n        },\n\n        onDateMinChange(date: number) {\n            console.info(\"[onDateMinChange] date=\", date);\n            dispatch(Actions.setDateMin(date));\n        },\n\n        onDateMaxChange(date: number) {\n            dispatch(Actions.setDateMax(date));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatsConfig);\n","import * as React from \"react\"\r\nimport { Provider } from 'react-redux'\r\nimport State from \"../state\"\r\nimport StatsConfig from \"../container/stats-config\"\r\nimport Dialog from \"../tfw/factory/dialog\"\r\nimport Button from \"../tfw/view/button\"\r\n\r\nimport _ from \"../intl\"\r\n\r\nexport default {\r\n    show() {\r\n        const dialog = Dialog.show({\r\n            closeOnEscape: true,\r\n            icon: \"stat\",\r\n            title: _(\"create-stat\"),\r\n            content: (<Provider store={State.store}><StatsConfig /></Provider>),\r\n            footer: [\r\n                <Button\r\n                    key=\"cancel\"\r\n                    label={_(\"cancel\")}\r\n                    flat={true}\r\n                    onClick={() => dialog.hide()} />,\r\n                <Button\r\n                    key=\"ok\"\r\n                    label={_(\"create-stat\")}\r\n                    warning={true}\r\n                    onClick={() => {\r\n                        dialog.hide();\r\n                        State.dispatch(State.addStat());\r\n                    }} />\r\n            ]\r\n        });\r\n\r\n    }\r\n}\r\n","import { connect } from 'react-redux'\nimport CarecenterHeader from \"../presentational/carecenter-header\"\nimport { IState, ICarecenter, IDispatchFunction } from \"../types\"\nimport State from \"../state\"\nimport StatsConfigDialog from \"../dialog/stats-config\"\n\nfunction mapStateToProps(state: IState) {\n    return {}\n}\n\nfunction mapDispatchToProps(dispatch: IDispatchFunction) {\n    return {\n        onStatClick(carecenter: ICarecenter) {\n            console.log(\"carecenter=\", carecenter);\n            dispatch(State.initStatsConfig(carecenter.id));\n            StatsConfigDialog.show();\n        },\n\n        onStructClick(carecenter: ICarecenter) {\n            console.log(\"carecenter=\", carecenter);\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CarecenterHeader);\n","import React from \"react\"\nimport Icon from '../../tfw/view/icon'\nimport _ from '../../intl'\n\nimport \"./wait.css\"\n\ninterface IWaitProps {\n    label?: string\n}\n\nexport default class Wait extends React.Component<IWaitProps, {}> {\n    render() {\n        return (<div className=\"webSoins-Wait\">\n            <Icon content=\"wait\" animate={true} />\n            <div>{this.props.label || _(\"loading\")}</div>\n        </div>)\n    }\n}\n","import * as React from \"react\"\r\nimport castArray from \"../tfw/converter/array\"\r\nimport castInteger from \"../tfw/converter/integer\"\r\nimport \"./pie.css\"\r\n\r\ninterface IPieProps {\r\n    values: number[];\r\n    colors?: string[];\r\n    size?: number;\r\n}\r\ninterface IPieState { }\r\n\r\nconst DEFAULT_COLORS = [\"#b37036\", \"#cc7529\", \"#e67717\", \"#ff7700\", \"#765\"];\r\n\r\nexport default class Pie extends React.Component<IPieProps, IPieState> {\r\n    private readonly canvas: React.RefObject<HTMLCanvasElement> = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.paint();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.paint();\r\n    }\r\n\r\n    paint() {\r\n        if (!this.canvas.current) return;\r\n        const\r\n            canvas: HTMLCanvasElement = this.canvas.current,\r\n            values = this.props.values,\r\n            colors = castArray(this.props.colors, DEFAULT_COLORS).slice(),\r\n            size = canvas.width,\r\n            lineWidth = 1,\r\n            radius = Math.floor(size / 2) - 3,\r\n            turn = 2 * Math.PI,\r\n            angleStep = turn / size,\r\n            total = this.props.values.reduce((acc, val) => val + acc),\r\n            ctx = canvas.getContext(\"2d\");\r\n        if (!ctx) return;\r\n        let\r\n            angle = 0,\r\n            angleTarget = 0;\r\n\r\n        const lineTo = (ang: number) => ctx.lineTo(radius * Math.sin(ang), -radius * Math.cos(ang));\r\n\r\n        ctx.save();\r\n        ctx.clearRect(0, 0, size, size);\r\n        if (total > 0) {\r\n            ctx.translate(size / 2, size / 2);\r\n            ctx.fillStyle = \"#000\";\r\n            ctx.globalAlpha = 0.5;\r\n            ctx.ellipse(0, 0, size / 2, size / 2, 0, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            ctx.strokeStyle = \"#000\";\r\n            ctx.lineWidth = lineWidth;\r\n            for (let i = 0; i < colors.length; i++) {\r\n                const color = colors[i % colors.length];\r\n                ctx.fillStyle = color;\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, 0);\r\n                angleTarget = angle + turn * values[i] / total;\r\n                do {\r\n                    lineTo(angle);\r\n                    angle += angleStep;\r\n                } while (angle < angleTarget)\r\n                lineTo(angleTarget);\r\n                angle = angleTarget;\r\n                ctx.closePath();\r\n                ctx.globalAlpha = 1;\r\n                ctx.fill();\r\n                ctx.globalAlpha = 0.2;\r\n                ctx.stroke();\r\n            }\r\n        }\r\n        ctx.restore();\r\n    }\r\n\r\n    render() {\r\n        const p = this.props;\r\n        const colors = castArray(p.colors, DEFAULT_COLORS);\r\n        const size = castInteger(p.size, 200);\r\n\r\n        return (\r\n            <canvas\r\n                ref={this.canvas}\r\n                width={size} height={size}\r\n                className=\"presentation-pie\">\r\n            </canvas>\r\n        );\r\n    }\r\n}\r\n","import WebService from \"../tfw/web-service\"\r\nimport { IStatsConfig, IOccurences, IOccurence } from \"../types\"\r\n\r\ninterface IServiceExtract {\r\n    patients: {};\r\n    data: {};\r\n}\r\n\r\ninterface IOccurencesDictionary {\r\n    [key: string]: { [key: string]: number }\r\n}\r\n\r\nexport default {\r\n    async extract(statsConfig: IStatsConfig): Promise<{}> {\r\n        const extraction = await WebService.exec(\"extract\", {\r\n            carecenter: statsConfig.carecenter.id,\r\n            begin: convertTime(statsConfig.dateMin),\r\n            end: convertTime(statsConfig.dateMax)\r\n        });\r\n        const result = {};\r\n        Object.values(extraction.data).forEach(consultation => {\r\n            Object.keys(consultation)\r\n                .filter(key => key.charAt(0) === '#')\r\n                .forEach(key => {\r\n                    const val = consultation[key];\r\n                    if (typeof result[key] === 'undefined') {\r\n                        result[key] = {};\r\n                    }\r\n                    const item = result[key];\r\n                    const occurences = item[val];\r\n                    if (typeof occurences === 'undefined') {\r\n                        item[val] = 1;\r\n                    } else {\r\n                        item[val]++;\r\n                    }\r\n                })\r\n        })\r\n        return convertIntoOccurences(result);\r\n    }\r\n}\r\n\r\n/**\r\n * Convert a number of milliseconds into a number of seconds.\r\n */\r\nfunction convertTime(milliseconds: number): number {\r\n    return Math.floor(.5 + milliseconds * 0.001);\r\n}\r\n\r\n\r\nfunction convertIntoOccurences(input: IOccurencesDictionary): { [key: string]: IOccurences } {\r\n    const result: { [key: string]: IOccurences } = {};\r\n    Object.keys(input).forEach(fieldName => {\r\n        const occurences = { sum: 0, occ: [] };\r\n        result[fieldName] = occurences;\r\n        const fieldValues = input[fieldName];\r\n        Object.keys(fieldValues).forEach(value => {\r\n            const occ = fieldValues[value];\r\n            occurences.sum += occ;\r\n            occurences.occ.push([value, occ]);\r\n        })\r\n        occurences.occ.sort(sortDescBySecondElement);\r\n    })\r\n    return result;\r\n}\r\n\r\n\r\nfunction sortDescBySecondElement(a: IOccurence, b: IOccurence): number {\r\n    const\r\n        A = a[1],\r\n        B = b[1];\r\n    return B - A;\r\n}\r\n","import * as React from \"react\"\r\nimport { IStatsConfig, IStructure, IOccurences } from \"../types\"\r\nimport Pie from \"./pie\"\r\nimport Flex from \"../tfw/layout/flex\"\r\nimport Icon from \"../tfw/view/icon\"\r\nimport Combo from \"../tfw/view/combo\"\r\nimport Button from \"../tfw/view/button\"\r\nimport FileAPI from \"../tfw/fileapi\"\r\nimport Structure from \"../structure\"\r\nimport StatService from \"../service/stat\"\r\n\r\nimport Intl from \"../tfw/intl\"\r\nconst _ = Intl.make(require(\"./stat.yaml\"));\r\n\r\nimport \"./stat.css\"\r\n\r\nconst DEFAULT_COLORS = [\"#b37036\", \"#cc7529\", \"#e67717\", \"#ff7700\", \"#765\"];\r\n\r\ntype TDataFromService = { [key: string]: IOccurences };\r\n\r\ninterface IStatProps {\r\n    stat: IStatsConfig;\r\n    structure: IStructure;\r\n    onClose?: () => void;\r\n}\r\n\r\ninterface IStatState {\r\n    dataFromService?: TDataFromService;\r\n    selectedField: string;\r\n}\r\n\r\nexport default class Stat extends React.Component<IStatProps, IStatState> {\r\n    constructor(props: IStatProps) {\r\n        super(props);\r\n        this.state = { selectedField: \"\" };\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    handleClose() {\r\n        const handler = this.props.onClose;\r\n        if (typeof handler !== 'function') return;\r\n        try {\r\n            handler();\r\n        } catch (ex) {\r\n            console.error(\"Error in handleClose(): \", );\r\n            console.error(ex);\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.state.dataFromService) return;\r\n        console.log(\"componentDidUpdate\");\r\n        this.refresh();\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount\");\r\n        this.refresh();\r\n    }\r\n\r\n    async refresh() {\r\n        const dataFromService = await StatService.extract(this.props.stat);\r\n        console.info(\"data=\", dataFromService);\r\n        this.setState({ dataFromService });\r\n    }\r\n\r\n    private export() {\r\n        const data: TDataFromService | undefined = this.state.dataFromService;\r\n        if (!data) return;\r\n        const { keys, values } = getFieldsKeysAndValues(data, this.props.structure);\r\n        const output: string[] = [\"Code du champ\\tNom du champ\\tValeur\\tOccurences\"];\r\n        keys.forEach((fieldKey: string, idx: number) => {\r\n            const fieldCaption = values[idx];\r\n            const occurences = data[fieldKey].occ;\r\n            occurences.forEach(([caption, count]: [string, number]) => {\r\n                output.push(`${fieldKey}\\t${fieldCaption}\\t${caption}\\t${count}`);\r\n            })\r\n        });\r\n\r\n        const filename = \"statistics.xls\";\r\n        FileAPI.saveAs(new Blob([output.join(\"\\n\")], { type: \"text/csv\" }), filename);\r\n    }\r\n\r\n    render() {\r\n        const data: TDataFromService | undefined = this.state.dataFromService;\r\n        let content = null;\r\n        if (!data) {\r\n            content = (<Flex>\r\n                <Icon content=\"wait\" animate={true} /><div>{\"Chargement en cours...\"}</div>\r\n            </Flex>);\r\n        } else {\r\n            const { keys, values } = getFieldsKeysAndValues(data, this.props.structure);\r\n            let value = this.state.selectedField;\r\n            if (keys.indexOf(value) === -1) value = keys[0];\r\n            const occurences = data[value];\r\n            if (!occurences) {\r\n                content = <div>{_(\"no-data\")}</div>;\r\n            } else {\r\n                content = (<div>\r\n                    <Combo\r\n                        keys={keys}\r\n                        onChange={selectedField => {\r\n                            console.info(\"[onChange] selectedField=\", selectedField);\r\n                            this.setState({ selectedField });\r\n                        }}\r\n                        value={value}>{\r\n                            values.map((val, idx) => {\r\n                                const key = keys[idx];\r\n                                return <div key={key}><b>{`${val} `}</b><small className='grey'>{key}</small></div>\r\n                            })\r\n                        }</Combo>\r\n                    <br />\r\n                    <center>\r\n                        <Pie colors={DEFAULT_COLORS}\r\n                            values={getValuesForPie(occurences)} />\r\n                    </center>\r\n                    <div>{\r\n                        occurences.occ.map(([caption, count], index) => {\r\n                            const colorIndex = Math.min(DEFAULT_COLORS.length - 1, index);\r\n                            const color = DEFAULT_COLORS[colorIndex];\r\n                            return (\r\n                                <Flex key={index}\r\n                                    justifyContent=\"space-between\"\r\n                                    alignItems=\"center\"\r\n                                    dir=\"row\"\r\n                                    classes={index % 2 ? \"thm-bg1\" : \"thm-bg2\"}>\r\n                                    <Flex\r\n                                        justifyContent=\"space-between\"\r\n                                        wide={false}\r\n                                        dir=\"row\"\r\n                                        alignItems=\"center\">\r\n                                        <div className=\"bullet\" style={{\r\n                                            background: color\r\n                                        }}></div>\r\n                                        <span>{caption}</span>\r\n                                    </Flex>\r\n                                    <div><b>{count}</b></div>\r\n                                </Flex>\r\n                            )\r\n                        })\r\n                    }</div>\r\n                    <Button\r\n                        wide={true}\r\n                        icon=\"export\"\r\n                        label={_(\"export\")}\r\n                        onClick={() => this.export()} />\r\n                </div >);\r\n            }\r\n        }\r\n\r\n        const stat: IStatsConfig = this.props.stat;\r\n        return (\r\n            <div className=\"presentational-stat thm-ele-card thm-bg1\">\r\n                <div className=\"thm-bgPD\">{`${stat.carecenter.name}, du ${formatDate(stat.dateMin)} au ${formatDate(stat.dateMax)}`}</div>\r\n                <div>{content}</div>\r\n                <hr />\r\n                <Flex dir=\"row\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={this.handleClose}\r\n                        icon=\"close\"\r\n                        label={_(\"close\")}\r\n                        flat={true} />\r\n                </Flex>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction getFieldsKeysAndValues(data: TDataFromService, structure: IStructure): { keys: string[], values: string[] } {\r\n    const keys = Object.keys(data);\r\n    const values = keys.map(key => Structure.getFieldCaption(key, structure));\r\n    const array = keys.map((key, index) => [key, values[index]]);\r\n    array.sort((a, b) => {\r\n        const A = a[1];\r\n        const B = b[1];\r\n        if (A < B) return -1;\r\n        if (A > B) return +1;\r\n        return 0;\r\n    });\r\n\r\n    return {\r\n        keys: array.map(item => item[0]),\r\n        values: array.map(item => item[1])\r\n    };\r\n}\r\n\r\nfunction formatDate(date: number): string {\r\n    const d = new Date(date);\r\n    return `${d.getDate()}-${1 + d.getMonth()}-${d.getFullYear()}`;\r\n}\r\n\r\n\r\nfunction getValuesForPie(occurences: IOccurences, sectors: number = 4): number[] {\r\n    const { sum, occ } = occurences;\r\n    const values: number[] = [];\r\n    let total = 0;\r\n    for (let i = 0; i < Math.min(sectors, occ.length); i++) {\r\n        const [, count] = occ[i];\r\n        values.push(count);\r\n        total += count;\r\n    }\r\n    if (sum > total) values.push(sum - total);\r\n    return values;\r\n}\r\n","import React from \"react\"\nimport castArray from \"../converter/array\"\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\nimport Button from \"../view/button\"\nimport Gesture from \"../gesture\"\nimport \"./sidemenu.css\"\n\ninterface ISidemenuProps {\n    show?: boolean;\n    head?: string;\n    menu?: React.ReactElement<HTMLDivElement>;\n    body?: React.ReactElement<HTMLDivElement>;\n    classes?: string[] | string;\n    onShowChange?: (isMenuVisible: boolean) => void;\n}\n\nexport default class Sidemenu extends React.Component<ISidemenuProps, {}> {\n    refMenu = React.createRef<HTMLDivElement>();\n\n    constructor(props: ISidemenuProps) {\n        super(props);\n        this.handleShowChange = this.handleShowChange.bind(this);\n    }\n\n    componentDidMount() {\n        const menu = this.refMenu.current;\n        if (!menu) return;\n        Gesture(menu).on({\n            swipeleft: () => {\n                const handler = this.props.onShowChange;\n                if (typeof handler === 'function') handler(false);\n            }\n        });\n    }\n    handleShowChange() {\n        const handler = this.props.onShowChange;\n        if (typeof handler !== 'function') return;\n        handler(!castBoolean(this.props.show, window.innerWidth > 480));\n    }\n\n    render() {\n        const show = castBoolean(this.props.show, window.innerWidth > 480);\n        const head = castString(this.props.head, \"\");\n        const classes = [\"tfw-layout-sidemenu thm-bg0\"].concat(castArray(this.props.classes));\n        if (show) classes.push(\"show\");\n\n        return (\n            <div className={classes.join(\" \")} >\n                <div className=\"body thm-bg0\" >{this.props.body}</div>\n                <div className=\"menu thm-ele-nav thm-bg1\" ref={this.refMenu}>\n                    <header className=\"thm-ele-nav thm-bgPD\" >{head}</header>\n                    <menu> {this.props.menu} </menu>\n                </div>\n                <div className=\"icon thm-bgPD\" >\n                    <Button icon=\"menu\" flat={true} onClick={this.handleShowChange} />\n                </div>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\"\nimport { connect } from 'react-redux'\nimport CarecenterHeader from \"./carecenter-header\"\nimport Wait from \"../presentational/wait\"\nimport Stat from \"../presentational/stat\"\nimport Sidemenu from \"../tfw/layout/sidemenu\"\nimport Icon from \"../tfw/view/icon\"\nimport Flex from \"../tfw/layout/flex\"\nimport Button from \"../tfw/view/button\"\nimport User from \"../state/user\"\nimport State from \"../state\"\nimport Hash from \"../util/hash\"\n\nimport { IState, IDispatchFunction, IOrganization, ICarecenter } from \"../types\"\nimport _ from \"../intl\";\n\nimport \"./sidemenu.css\"\n\nfunction mapStateToProps(state: IState) {\n    const stats = state.stats.map(stat => {\n        const carecenter = stat.carecenter;\n        const structureId = carecenter.id;\n        const structure = state.structures.find(s => s.id === structureId);\n        if (!structure) {\n            console.error(`There is no Structure with id=${structureId} in carecenter \"${carecenter.name}\"!`);\n            return null;\n        }\n        const key = Hash.statsConfig(stat);\n        return (<Stat key={key}\n            stat={stat}\n            onClose={() => State.dispatch(State.removeStat(key))}\n            structure={structure} />);\n    });\n    return {\n        head: state.user.nickname,\n        menu: (<div>\n            <ul>{state.organizations.map((organization: IOrganization) => (\n                <li key={organization.id}>{organization.name}<ul>{\n                    renderCareCenterHeader(state, organization)\n                }</ul></li>\n            ))\n            }</ul>\n            <br /><hr /><br />\n            <Button label={_(\"logout\")} icon=\"logout\" wide={true}\n                onClick={() => window.location.reload()} />\n        </div>),\n        body: stats.length > 0 ? stats : (\n            <Flex\n                dir=\"column\"\n                alignItems=\"center\"\n                classes={[\"container-sidemenu\", \"welcome\"]}\n            >\n                <div>{_(\"welcome\")}</div>\n                <Icon content=\"stat\" />\n                <div>{_(\"report\")}</div>\n                <Icon content=\"report\" />\n            </Flex>\n        )\n    }\n}\n\nfunction renderCareCenterHeader(state: IState, organization: IOrganization) {\n    const carecentersOfOrganization = state.carecenters.filter((carecenter: ICarecenter) =>\n        carecenter.organizationId === organization.id)\n    if (carecentersOfOrganization.length === 0) return <Wait/>\n\n    return carecentersOfOrganization.map((carecenter: ICarecenter) => (\n        <CarecenterHeader\n            key={carecenter.id}\n            carecenter={carecenter}\n            structures={state.structures} />\n    ))\n}\n\nfunction mapDispatchToProps(dispatch: IDispatchFunction) {\n    return {\n        onLanguageClick() {\n            dispatch(User.setLanguage(\"jp\"));\n        },\n\n        onLogoutClick() {\n            window.location.reload();\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidemenu);\n","import * as React from \"react\"\n\nimport { IUser } from \"./types\"\nimport Sidemenu from \"./container/sidemenu\"\n\nimport \"./App.css\"\n\ninterface IAppProps {\n    user: IUser\n}\n\nexport default class App extends React.Component<IAppProps, {}> {\n    render() {\n        return <Sidemenu classes=\"App\" />\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport State from \"./state\"\nimport Intl from \"./tfw/intl\";\nimport { IUser, IOrganization, ICarecenter, IStructure } from \"./types\"\nimport ServiceOrganization from \"./service/organization\"\nimport ServiceCarecenter from \"./service/carecenter\"\nimport ServiceStructure from \"./service/structure\"\n\nimport App from \"./App\";\n\nexport default {\n    async start(user: IUser) {\n        const root = document.getElementById(\"root\");\n        ReactDOM.render(\n            <Provider store={State.store}><App user={user} /></Provider>,\n            root);\n        State.dispatch(State.User.setLanguage(Intl.lang));\n        State.dispatch(State.User.setNickname(user.nickname));\n        const organizations = await ServiceOrganization.list();\n        State.dispatch(State.Organizations.setOrganizations(organizations));\n        State.dispatch(State.Carecenters.setCarecenters([]));\n        organizations.forEach(async (organization: IOrganization) => {\n            const structures = await ServiceStructure.list(organization.id);\n            structures.forEach((structure: IStructure) => {\n                State.dispatch(State.Structures.addStructure(structure));\n            });\n            const carecenters = await ServiceCarecenter.list(organization.id);\n            carecenters.forEach((carecenter: ICarecenter) => {\n                State.dispatch(State.Carecenters.addCarecenter(carecenter));\n            });\n        })\n    }\n}\n"],"sourceRoot":""}